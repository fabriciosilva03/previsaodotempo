{"ast":null,"code":"var _jsxFileName = \"/home/fabricio/git/previsaodotempo/src/components/Forecast/index.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { condition } from \"../../utils/condition\";\nexport default function Forecast(_ref) {\n  var data = _ref.data;\n  var icon = condition(data.condition);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, data.date), React.createElement(Ionicons, {\n    name: icon.name,\n    color: icon.color,\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, data.min), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, data.max, \"\\xB0\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFF',\n    marginLeft: 12,\n    borderRadius: 8,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 14,\n    paddingRight: 14,\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  date: {\n    fontSize: 14\n  },\n  temp: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/fabricio/git/previsaodotempo/src/components/Forecast/index.js"],"names":["React","Ionicons","condition","Forecast","data","icon","styles","container","date","name","color","temp","min","fontSize","fontWeight","max","StyleSheet","create","backgroundColor","marginLeft","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAAOC,QAAP,QAAsB,oBAAtB;AAEA,SAASC,SAAT;AAEA,eAAe,SAASC,QAAT,OAAyB;AAAA,MAANC,IAAM,QAANA,IAAM;AACpC,MAAIC,IAAI,GAAGH,SAAS,CAACE,IAAI,CAACF,SAAN,CAApB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,IAAI,CAACI,IAAhC,CAFJ,EAGI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,IAAI,CAACI,IAArB;AAA2B,IAAA,KAAK,EAAEJ,IAAI,CAACK,KAAvC;AAA8C,IAAA,IAAI,EAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,IAAI,CAACQ,GAAZ,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,UAAU,EAAC;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDV,IAAI,CAACW,GAArD,SAFJ,CALJ,CADJ;AAaH;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAC;AACPW,IAAAA,eAAe,EAAE,MADV;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,YAAY,EAAE,CAHP;AAIPC,IAAAA,UAAU,EAAE,EAJL;AAKPC,IAAAA,aAAa,EAAE,EALR;AAMPC,IAAAA,WAAW,EAAE,EANN;AAOPC,IAAAA,YAAY,EAAE,EAPP;AAQPC,IAAAA,cAAc,EAAE,cART;AASPC,IAAAA,UAAU,EAAE;AATL,GADmB;AAY7BlB,EAAAA,IAAI,EAAC;AACDK,IAAAA,QAAQ,EAAE;AADT,GAZwB;AAe7BF,EAAAA,IAAI,EAAC;AACDe,IAAAA,UAAU,EAAE;AADX;AAfwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {Text, View, StyleSheet} from 'react-native';\n\nimport{Ionicons} from '@expo/vector-icons';\n\nimport { condition } from '../../utils/condition';\n\nexport default function Forecast({data}){\n    let icon = condition(data.condition)\n\n    return(\n        <View style={styles.container}>\n\n            <Text style={styles.date}>{data.date}</Text>\n            <Ionicons name={icon.name} color={icon.color} size={25} />\n\n            <View style={styles.temp}>\n                <Text>{data.min}</Text>\n                <Text style={{fontSize:18, fontWeight:'bold'}}>{data.max}Â°</Text>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n       backgroundColor: '#FFF',\n       marginLeft: 12,\n       borderRadius: 8,\n       paddingTop: 10,\n       paddingBottom: 10,\n       paddingLeft: 14,\n       paddingRight: 14,\n       justifyContent: 'space-around',\n       alignItems: 'center',\n    },\n    date:{\n        fontSize: 14,\n    },\n    temp:{\n        alignItems: 'center'\n    }\n\n})"]},"metadata":{},"sourceType":"module"}