{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fabricio/git/previsaodotempo/src/pages/Home/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport * as Location from 'expo-location';\nimport Menu from \"../../components/Menu\";\nimport Header from \"../../components/Header\";\nimport Conditions from \"../../components/Conditions\";\nimport Forecast from \"../../components/Forecast\";\nimport api, { key } from \"../../services/api\";\nvar mylist = [{\n  \"date\": \"17/03\",\n  \"weekday\": \"Qua\",\n  \"max\": 28,\n  \"min\": 18,\n  \"description\": \"Tempestades isoladas\",\n  \"condition\": \"storm\"\n}, {\n  \"date\": \"18/03\",\n  \"weekday\": \"Qui\",\n  \"max\": 27,\n  \"min\": 20,\n  \"description\": \"Tempestades\",\n  \"condition\": \"storm\"\n}, {\n  \"date\": \"19/03\",\n  \"weekday\": \"Sex\",\n  \"max\": 26,\n  \"min\": 19,\n  \"description\": \"Tempestades\",\n  \"condition\": \"storm\"\n}, {\n  \"date\": \"20/03\",\n  \"weekday\": \"Sáb\",\n  \"max\": 27,\n  \"min\": 17,\n  \"description\": \"Tempestades isoladas\",\n  \"condition\": \"storm\"\n}, {\n  \"date\": \"21/03\",\n  \"weekday\": \"Dom\",\n  \"max\": 28,\n  \"min\": 18,\n  \"description\": \"Ensolarado\",\n  \"condition\": \"clear_day\"\n}, {\n  \"date\": \"22/03\",\n  \"weekday\": \"Seg\",\n  \"max\": 30,\n  \"min\": 19,\n  \"description\": \"Parcialmente nublado\",\n  \"condition\": \"cloudly_day\"\n}, {\n  \"date\": \"23/03\",\n  \"weekday\": \"Ter\",\n  \"max\": 30,\n  \"min\": 18,\n  \"description\": \"Parcialmente nublado\",\n  \"condition\": \"cloudly_day\"\n}, {\n  \"date\": \"24/03\",\n  \"weekday\": \"Qua\",\n  \"max\": 30,\n  \"min\": 19,\n  \"description\": \"Parcialmente nublado\",\n  \"condition\": \"cloudly_day\"\n}, {\n  \"date\": \"25/03\",\n  \"weekday\": \"Qui\",\n  \"max\": 25,\n  \"min\": 20,\n  \"description\": \"Tempestades isoladas\",\n  \"condition\": \"storm\"\n}, {\n  \"date\": \"26/03\",\n  \"weekday\": \"Sex\",\n  \"max\": 27,\n  \"min\": 17,\n  \"description\": \"Parcialmente nublado\",\n  \"condition\": \"cloudly_day\"\n}];\nexport default function Home() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erroMsg = _useState2[0],\n      setErrorMsg = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weather = _useState6[0],\n      setWeather = _useState6[1];\n\n  var _useState7 = useState({\n    name: 'cloud',\n    color: '#FFF'\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      icon = _useState8[0],\n      setIcon = _useState8[1];\n\n  var _useState9 = useState(['#1ed6ff', '#97c1ff']),\n      _useState10 = _slicedToArray(_useState9, 2),\n      background = _useState10[0],\n      setBackground = _useState10[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, response;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 8;\n                break;\n              }\n\n              setErrorMsg('Permissao negada para acessar a localização!');\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 10:\n              location = _context.sent;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(api.get(\"/weather?\\n      key=\" + key + \"&\\n      lat=\" + location.coords.latitude + \"&\\n      lon=\" + location.coords.longitude));\n\n            case 13:\n              response = _context.sent;\n              setWeather(response.data);\n\n              if (response.data.results.currently === 'noite') {\n                setBackground(['#0c3741', '#0f2f61']);\n              }\n\n              _context.t0 = response.data.results.condition_slug;\n              _context.next = _context.t0 === 'clear_day' ? 19 : _context.t0 === 'rain' ? 21 : _context.t0 === 'storm' ? 23 : 25;\n              break;\n\n            case 19:\n              setIcon({\n                name: 'partly-sunny',\n                color: '#FFB300'\n              });\n              return _context.abrupt(\"break\", 25);\n\n            case 21:\n              setIcon({\n                name: 'rainy',\n                color: '#FFF'\n              });\n              return _context.abrupt(\"break\", 25);\n\n            case 23:\n              setIcon({\n                name: 'rainy',\n                color: '#FFF'\n              });\n              return _context.abrupt(\"break\", 25);\n\n            case 25:\n              setLoading(false);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), React.createElement(Header, {\n    background: background,\n    weather: weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), React.createElement(Conditions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    horizontal: true,\n    contentContainerStyle: {\n      paddingBottom: '5%'\n    },\n    style: styles.list,\n    data: mylist,\n    keyExtractor: function keyExtractor(item) {\n      return item.date;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Forecast, {\n        data: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 38\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#e8f0ff',\n    paddingTop: '5%'\n  },\n  list: {\n    marginTop: 10,\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["/home/fabricio/git/previsaodotempo/src/pages/Home/index.js"],"names":["React","useState","useEffect","Location","Menu","Header","Conditions","Forecast","api","key","mylist","Home","erroMsg","setErrorMsg","loading","setLoading","weather","setWeather","name","color","icon","setIcon","background","setBackground","requestPermissionsAsync","status","getCurrentPositionAsync","location","get","coords","latitude","longitude","response","data","results","currently","condition_slug","styles","container","paddingBottom","list","item","date","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","paddingTop","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {SafeAreaView, Text, StyleSheet, FlatList} from 'react-native';\nimport * as Location from 'expo-location';\n\nimport Menu from '../../components/Menu';\nimport Header from '../../components/Header';\nimport Conditions from '../../components/Conditions';\nimport Forecast from '../../components/Forecast';\n\nimport api, { key } from '../../services/api';\n\nconst mylist = [\n    {\n      \"date\": \"17/03\",\n      \"weekday\": \"Qua\",\n      \"max\": 28,\n      \"min\": 18,\n      \"description\": \"Tempestades isoladas\",\n      \"condition\": \"storm\"\n    },\n    {\n      \"date\": \"18/03\",\n      \"weekday\": \"Qui\",\n      \"max\": 27,\n      \"min\": 20,\n      \"description\": \"Tempestades\",\n      \"condition\": \"storm\"\n    },\n    {\n      \"date\": \"19/03\",\n      \"weekday\": \"Sex\",\n      \"max\": 26,\n      \"min\": 19,\n      \"description\": \"Tempestades\",\n      \"condition\": \"storm\"\n    },\n    {\n      \"date\": \"20/03\",\n      \"weekday\": \"Sáb\",\n      \"max\": 27,\n      \"min\": 17,\n      \"description\": \"Tempestades isoladas\",\n      \"condition\": \"storm\"\n    },\n    {\n      \"date\": \"21/03\",\n      \"weekday\": \"Dom\",\n      \"max\": 28,\n      \"min\": 18,\n      \"description\": \"Ensolarado\",\n      \"condition\": \"clear_day\"\n    },\n    {\n      \"date\": \"22/03\",\n      \"weekday\": \"Seg\",\n      \"max\": 30,\n      \"min\": 19,\n      \"description\": \"Parcialmente nublado\",\n      \"condition\": \"cloudly_day\"\n    },\n    {\n      \"date\": \"23/03\",\n      \"weekday\": \"Ter\",\n      \"max\": 30,\n      \"min\": 18,\n      \"description\": \"Parcialmente nublado\",\n      \"condition\": \"cloudly_day\"\n    },\n    {\n      \"date\": \"24/03\",\n      \"weekday\": \"Qua\",\n      \"max\": 30,\n      \"min\": 19,\n      \"description\": \"Parcialmente nublado\",\n      \"condition\": \"cloudly_day\"\n    },\n    {\n      \"date\": \"25/03\",\n      \"weekday\": \"Qui\",\n      \"max\": 25,\n      \"min\": 20,\n      \"description\": \"Tempestades isoladas\",\n      \"condition\": \"storm\"\n    },\n    {\n      \"date\": \"26/03\",\n      \"weekday\": \"Sex\",\n      \"max\": 27,\n      \"min\": 17,\n      \"description\": \"Parcialmente nublado\",\n      \"condition\": \"cloudly_day\"\n    }\n  ];\n\nexport default function Home(){\n  const [erroMsg, setErrorMsg] = useState(null)\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [icon, setIcon] = useState({ name: 'cloud', color:'#FFF'})\n  const [background, setBackground] = useState(['#1ed6ff', '#97c1ff'])\n  \n  useEffect(() => {\n    \n    (async ()=>{\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted'){\n        setErrorMsg('Permissao negada para acessar a localização!')\n        setLoading(false);\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      // console.log(location.coords);\n\n      //weather?key=608e7d6d&lat=-23.682&lon=-46.875\n      const response = \n      await api.get(`/weather?\n      key=${key}&\n      lat=${location.coords.latitude}&\n      lon=${location.coords.longitude}`);\n\n     setWeather(response.data);\n\n     if(response.data.results.currently === 'noite'){\n       setBackground(['#0c3741', '#0f2f61'])\n     }\n\n     switch(response.data.results.condition_slug){\n       case 'clear_day':\n         setIcon({name: 'partly-sunny', color:'#FFB300'});\n         break;\n      case 'rain':\n        setIcon({name: 'rainy', color: '#FFF'});\n        break;\n      case 'storm':\n        setIcon({name: 'rainy', color: '#FFF'});\n        break;\n     }\n\n     setLoading(false);\n\n    })();\n\n  },[]);\n\n    return(\n        <SafeAreaView style={styles.container}>\n            \n            <Menu />\n            \n            <Header background={background} weather={weather} />\n            \n            <Conditions />\n            \n            <FlatList\n            horizontal={true}\n            contentContainerStyle={{paddingBottom: '5%'}}\n            style={styles.list}\n            data={mylist}\n            keyExtractor={item => item.date}\n            renderItem={ ({item}) => <Forecast data={item}/> }\n            />\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#e8f0ff',\n      paddingTop: '5%',  \n    },\n    list:{\n        marginTop:10,\n        marginLeft: 10,\n    }\n})"]},"metadata":{},"sourceType":"module"}